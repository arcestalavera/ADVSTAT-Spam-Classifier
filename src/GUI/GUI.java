/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Model.ConfusionMatrix;
import Model.Email;
import Model.TrainedSet;
import Processor.CSVReader;
import Processor.CSVWriter;
import Processor.Classifier;
import Processor.DatasetTrainer;
import Processor.FeatureMapConstructor;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JFileChooser;

/**
 *
 * @author Arces
 */
public class GUI extends javax.swing.JFrame {

    private JFileChooser jfc;
    private File inputFile;
    private ArrayList<Email> trainData, testData;
    private TrainedSet trainedData;
    private CSVReader reader;
    private boolean canClassify;
    private int classifyCount;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();

        //GUI Adjustments
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        setLocationRelativeTo(null);

        //File Chooser
        this.jfc = new JFileChooser();

        //CSV Reader
        this.reader = new CSVReader();

        //classifier
        this.canClassify = false;
        this.classifyCount = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerPanel = new javax.swing.JPanel();
        headerLabel = new javax.swing.JLabel();
        featurePanel = new javax.swing.JPanel();
        featureTitleLabel = new javax.swing.JLabel();
        featureFileLabel = new javax.swing.JLabel();
        featureFileBtn = new javax.swing.JButton();
        featureConstructBtn = new javax.swing.JButton();
        classifyPanel = new javax.swing.JPanel();
        classifyLabel = new javax.swing.JLabel();
        trainedFileLabel = new javax.swing.JLabel();
        trainedFileBtn = new javax.swing.JButton();
        classifyBtn = new javax.swing.JButton();
        testFileLabel = new javax.swing.JLabel();
        testFileBtn = new javax.swing.JButton();
        trainingPanel = new javax.swing.JPanel();
        trainingTitleLabel = new javax.swing.JLabel();
        trainingFileLabel = new javax.swing.JLabel();
        trainingFileBtn = new javax.swing.JButton();
        trainingTrainBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Spam Classifier");

        headerLabel.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        headerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerLabel.setText("Spam Classifier");

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        featurePanel.setBackground(new java.awt.Color(255, 255, 255));

        featureTitleLabel.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        featureTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        featureTitleLabel.setText("Construct Feature Map");

        featureFileLabel.setFont(new java.awt.Font("Century Gothic", 2, 10)); // NOI18N
        featureFileLabel.setForeground(new java.awt.Color(102, 102, 102));
        featureFileLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        featureFileLabel.setText("Please Select a File");

        featureFileBtn.setText("Select File");
        featureFileBtn.setFocusable(false);
        featureFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                featureFileBtnActionPerformed(evt);
            }
        });

        featureConstructBtn.setText("Construct Feature Map");
        featureConstructBtn.setEnabled(false);
        featureConstructBtn.setFocusable(false);
        featureConstructBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                featureConstructBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout featurePanelLayout = new javax.swing.GroupLayout(featurePanel);
        featurePanel.setLayout(featurePanelLayout);
        featurePanelLayout.setHorizontalGroup(
            featurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(featurePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(featurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(featureTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(featureFileLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(featureFileBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(featureConstructBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE))
                .addContainerGap())
        );
        featurePanelLayout.setVerticalGroup(
            featurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(featurePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(featureTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(featureFileLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(featureFileBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(featureConstructBtn)
                .addGap(10, 10, 10))
        );

        classifyPanel.setBackground(new java.awt.Color(255, 255, 255));

        classifyLabel.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        classifyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        classifyLabel.setText("Classify Spam Mails");

        trainedFileLabel.setFont(new java.awt.Font("Century Gothic", 2, 10)); // NOI18N
        trainedFileLabel.setForeground(new java.awt.Color(102, 102, 102));
        trainedFileLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        trainedFileLabel.setText("Select Trained File");

        trainedFileBtn.setText("Select File");
        trainedFileBtn.setFocusable(false);
        trainedFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainedFileBtnActionPerformed(evt);
            }
        });

        classifyBtn.setText("Classify Test Dataset");
        classifyBtn.setEnabled(false);
        classifyBtn.setFocusable(false);
        classifyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classifyBtnActionPerformed(evt);
            }
        });

        testFileLabel.setFont(new java.awt.Font("Century Gothic", 2, 10)); // NOI18N
        testFileLabel.setForeground(new java.awt.Color(102, 102, 102));
        testFileLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        testFileLabel.setText("Select Testing File");

        testFileBtn.setText("Select File");
        testFileBtn.setFocusable(false);
        testFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testFileBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout classifyPanelLayout = new javax.swing.GroupLayout(classifyPanel);
        classifyPanel.setLayout(classifyPanelLayout);
        classifyPanelLayout.setHorizontalGroup(
            classifyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(classifyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(classifyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(classifyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(classifyBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                    .addGroup(classifyPanelLayout.createSequentialGroup()
                        .addGroup(classifyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(trainedFileLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(trainedFileBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(classifyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(testFileLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(testFileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        classifyPanelLayout.setVerticalGroup(
            classifyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(classifyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(classifyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(classifyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(classifyPanelLayout.createSequentialGroup()
                        .addComponent(trainedFileLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(trainedFileBtn))
                    .addGroup(classifyPanelLayout.createSequentialGroup()
                        .addComponent(testFileLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(testFileBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(classifyBtn)
                .addGap(10, 10, 10))
        );

        trainingPanel.setBackground(new java.awt.Color(250, 250, 250));

        trainingTitleLabel.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        trainingTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        trainingTitleLabel.setText("Train Dataset");

        trainingFileLabel.setFont(new java.awt.Font("Century Gothic", 2, 10)); // NOI18N
        trainingFileLabel.setForeground(new java.awt.Color(102, 102, 102));
        trainingFileLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        trainingFileLabel.setText("Please Select a File");

        trainingFileBtn.setText("Select File");
        trainingFileBtn.setFocusable(false);
        trainingFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainingFileBtnActionPerformed(evt);
            }
        });

        trainingTrainBtn.setText("Train Dataset");
        trainingTrainBtn.setEnabled(false);
        trainingTrainBtn.setFocusable(false);
        trainingTrainBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainingTrainBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout trainingPanelLayout = new javax.swing.GroupLayout(trainingPanel);
        trainingPanel.setLayout(trainingPanelLayout);
        trainingPanelLayout.setHorizontalGroup(
            trainingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(trainingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(trainingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(trainingTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(trainingFileLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(trainingFileBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(trainingTrainBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE))
                .addContainerGap())
        );
        trainingPanelLayout.setVerticalGroup(
            trainingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(trainingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(trainingTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(trainingFileLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(trainingFileBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(trainingTrainBtn)
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(featurePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(classifyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(trainingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(featurePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(trainingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(classifyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void featureFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_featureFileBtnActionPerformed
        int val = jfc.showOpenDialog(this);
        if (val == JFileChooser.APPROVE_OPTION) {
            //if a file has been chosen
            //get file
            inputFile = jfc.getSelectedFile();
            //update GUI
            featureFileLabel.setText("Feature Construction is Ready!");
            featureConstructBtn.setEnabled(true);
        } else {
            //if no file has been chosen
            inputFile = null;
            featureFileLabel.setText("Please Select a File");
            featureConstructBtn.setEnabled(false);
        }
    }//GEN-LAST:event_featureFileBtnActionPerformed

    private void featureConstructBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_featureConstructBtnActionPerformed
        featureFileLabel.setText("Constructing Feature Map. . .");

        FeatureMapConstructor fmc = new FeatureMapConstructor();
        ArrayList<Email> emailList = fmc.constructFeatureMap(inputFile);

        featureFileLabel.setText("Feature Map Complete!");

        //export feature map
        int val = jfc.showSaveDialog(this);
        if (val == JFileChooser.APPROVE_OPTION) {
            CSVWriter writer = new CSVWriter();

            writer.exportFeatureMap(jfc.getSelectedFile().getPath(), emailList);
        }
    }//GEN-LAST:event_featureConstructBtnActionPerformed

    private void trainedFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainedFileBtnActionPerformed
        int val = jfc.showOpenDialog(this);
        if (val == JFileChooser.APPROVE_OPTION) {

            trainedData = reader.readTrainedSet(jfc.getSelectedFile());

            //update GUI
            trainedFileLabel.setText("Trained Data Ready!");
            classifyCount++;

            if (classifyCount == 2) {
                canClassify = true;
            }
        } else {
            trainedFileLabel.setText("Select Trained File");

            classifyCount--;
            canClassify = false;
        }

        if (canClassify) {
            classifyBtn.setEnabled(true);
        } else {
            classifyBtn.setEnabled(false);
        }
    }//GEN-LAST:event_trainedFileBtnActionPerformed

    private void testFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testFileBtnActionPerformed
        int val = jfc.showOpenDialog(this);
        if (val == JFileChooser.APPROVE_OPTION) {
            testData = reader.readEmail(jfc.getSelectedFile());

            testFileLabel.setText("Test Data Ready!");

            classifyCount++;

            if (classifyCount == 2) {
                canClassify = true;
            }
        } else {
            trainedFileLabel.setText("Select Test File");

            classifyCount--;
            canClassify = false;
        }

        if (canClassify) {
            classifyBtn.setEnabled(true);
        } else {
            classifyBtn.setEnabled(false);
        }
    }//GEN-LAST:event_testFileBtnActionPerformed

    private void trainingFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainingFileBtnActionPerformed
        int val = jfc.showOpenDialog(this);
        if (val == JFileChooser.APPROVE_OPTION) {
            trainData = reader.readEmail(jfc.getSelectedFile());
            
            trainingFileLabel.setText("Training of Dataset Ready!");
            trainingTrainBtn.setEnabled(true);
        }
    }//GEN-LAST:event_trainingFileBtnActionPerformed

    private void trainingTrainBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainingTrainBtnActionPerformed
        DatasetTrainer dt = new DatasetTrainer();
        TrainedSet ts = dt.trainDataset(trainData);

        trainingFileLabel.setText("Training Complete!");

        //export feature map
        int val = jfc.showSaveDialog(this);
        if (val == JFileChooser.APPROVE_OPTION) {
            CSVWriter writer = new CSVWriter();
            writer.exportTrainedDataset(jfc.getSelectedFile().getPath(), ts);
        }
    }//GEN-LAST:event_trainingTrainBtnActionPerformed

    private void classifyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classifyBtnActionPerformed
        Classifier classifier = new Classifier();
        ConfusionMatrix cm = classifier.classifyTestSet(trainedData, testData);
        
        //export confusion matrix
        int val = jfc.showSaveDialog(this);
        if (val == JFileChooser.APPROVE_OPTION) {
            CSVWriter writer = new CSVWriter();
            writer.exportConfusionMatrix(jfc.getSelectedFile().getPath(), cm);
        }
    }//GEN-LAST:event_classifyBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton classifyBtn;
    private javax.swing.JLabel classifyLabel;
    private javax.swing.JPanel classifyPanel;
    private javax.swing.JButton featureConstructBtn;
    private javax.swing.JButton featureFileBtn;
    private javax.swing.JLabel featureFileLabel;
    private javax.swing.JPanel featurePanel;
    private javax.swing.JLabel featureTitleLabel;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JButton testFileBtn;
    private javax.swing.JLabel testFileLabel;
    private javax.swing.JButton trainedFileBtn;
    private javax.swing.JLabel trainedFileLabel;
    private javax.swing.JButton trainingFileBtn;
    private javax.swing.JLabel trainingFileLabel;
    private javax.swing.JPanel trainingPanel;
    private javax.swing.JLabel trainingTitleLabel;
    private javax.swing.JButton trainingTrainBtn;
    // End of variables declaration//GEN-END:variables
}
